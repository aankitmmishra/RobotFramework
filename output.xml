<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.3 on win32)" generated="20210316 14:13:59.406" rpa="false">
<suite id="s1" name="RobotFramework" source="P:\git\RobotFramework">
<suite id="s1-s1" name="RobotAutomation" source="P:\git\RobotFramework\RobotAutomation">
<suite id="s1-s1-s1" name="TestCases" source="P:\git\RobotFramework\RobotAutomation\TestCases">
<suite id="s1-s1-s1-s1" name="APITesting" source="P:\git\RobotFramework\RobotAutomation\TestCases\APITesting.robot">
<test id="s1-s1-s1-s1-t1" name="TC_001_Get_Request">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Get_Student_Details</arg>
<arg>${Base_URL}</arg>
</arguments>
<msg timestamp="20210316 14:14:02.524" level="INFO">Creating Session using : alias=Get_Student_Details, url=http://thetestingworldapi.com/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210316 14:14:02.523" endtime="20210316 14:14:02.525"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>Get_Student_Details</arg>
<arg>api/studentsDetails</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210316 14:14:02.845" level="INFO">GET Request : url=http://thetestingworldapi.com//api/studentsDetails 
 path_url=//api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210316 14:14:02.847" level="INFO">GET Response : url=http://thetestingworldapi.com//api/studentsDetails 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Server': 'Microsoft-IIS/8.5', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 16 Mar 2021 14:14:02 GMT', 'Content-Length': '11166'} 
 body=[{"id":108238,"first_name":"Johnny","middle_name":"G","last_name":"Grøttå","date_of_birth":"28.03.1968"},{"id":108231,"first_name":"jtest","middle_name":"jay","last_name":"testj","date_of_birth":"27/08/2016"},{"id":108230,"first_name":"Hono","middle_name":"Chris","last_name":"Mbe 4","date_of_birth":"16/05/1989"},{"id":108229,"first_name":"Update_Name1","middle_name":"UpdateT","last_name":"UpdateLastName1","date_of_birth":"11/11/1997"},{"id":108228,"first_name":"Update_Name1","middle_name":"UpdateT","last_name":"UpdateLastName1","date_of_birth":"11/11/1997"},{"id":108227,"first_name":"First Name","middle_name":"Middle Name","last_name":"Last Name","date_of_birth":"04/21/2020"},{"id":108226,"first_name":"First Name","middle_name":"Middle Name","last_name":"Last Name","date_of_birth":"04/21/2020"},{"id":108225,"first_name":"First Name","middle_name":"Middle Name","last_name":"Last Name","date_of_birth":"04/21/2020"},{"id":108224,"first_name":"Update_Name1","middle_name":"UpdateT","last_name":"UpdateLastName1","date_of_birth":"11/11/1997"},{"id":108223,"first_name":"Update_Name1","middle_name":"UpdateT","last_name":"UpdateLastName1","date_of_birth":"11/11/1997"},{"id":108222,"first_name":"Update_Name1","middle_name":"UpdateT","last_name":"UpdateLastName1","date_of_birth":"11/11/1997"},{"id":108221,"first_name":"test3","middle_name":"min3","last_name":"last3","date_of_birth":"2019-09-12 00:00:00"},{"id":108220,"first_name":"test2","middle_name":"mid2","last_name":"last3","date_of_birth":"2021-08-12 00:00:00"},{"id":108219,"first_name":"test1 ","middle_name":"mid1","last_name":"last1","date_of_birth":"2021-03-12 00:00:00"},{"id":108218,"first_name":"test3","middle_name":"min3","last_name":"last3","date_of_birth":"2019-09-12 00:00:00"},{"id":108217,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108216,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108215,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108214,"first_name":"test3","middle_name":"min3","last_name":"last3","date_of_birth":"2019-09-12 00:00:00"},{"id":108213,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108212,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108211,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108210,"first_name":"test3","middle_name":"min3","last_name":"last3","date_of_birth":"2019-09-12 00:00:00"},{"id":108209,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108208,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108207,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108206,"first_name":"test3","middle_name":"min3","last_name":"last3","date_of_birth":"2019-09-12 00:00:00"},{"id":108205,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108204,"first_name":"test3","middle_name":"min3","last_name":"last3","date_of_birth":"2019-09-12 00:00:00"},{"id":108203,"first_name":"jtest","middle_name":"jay","last_name":"testj","date_of_birth":"27/08/2016"},{"id":108202,"first_name":"Hono","middle_name":"Chris","last_name":"Mbe 4","date_of_birth":"16/05/1989"},{"id":108201,"first_name":"2019-09-12 00:00:00","middle_name":"sample string 3","last_name":"sample string 4","date_of_birth":"sample string 5"},{"id":108200,"first_name":"TestName1","middle_name":"T","last_name":"TestLastName1","date_of_birth":"1/1/1996"},{"id":108199,"first_name":"2019-09-12 00:00:00","middle_name":"sample string 3","last_name":"sample string 4","date_of_birth":"sample string 5"},{"id":108198,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108197,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108196,"first_name":"jtest","middle_name":"jay","last_name":"testj","date_of_birth":"27/08/2016"},{"id":108195,"first_name":"Hono","middle_name":"Chris","last_name":"Mbe 4","date_of_birth":"16/05/1989"},{"id":108194,"first_name":"sample string 2","middle_name":"sample string 3","last_name":"sample string 4","date_of_birth":"sample string 5"},{"id":108193,"first_name":"sample string 2","middle_name":"sample string 3","last_name":"sample string 4","date_of_birth":"sample string 5"},{"id":108192,"first_name":"sample string 2","middle_name":"sample string 3","last_name":"sample string 4","date_of_birth":"sample string 5"},{"id":108191,"first_name":"Johnny","middle_name":"G","last_name":"Grøttå","date_of_birth":"28.03.1968"},{"id":108190,"first_name":"jtest","middle_name":"jay","last_name":"testj","date_of_birth":"27/08/2016"},{"id":108189,"first_name":"Hono","middle_name":"Chris","last_name":"Mbe 4","date_of_birth":"16/05/1989"},{"id":108188,"first_name":"First Name","middle_name":"Middle Name","last_name":"Last Name","date_of_birth":"04/21/2020"},{"id":108187,"first_name":"First Name","middle_name":"Middle Name","last_name":"Last Name","date_of_birth":"04/21/2020"},{"id":108186,"first_name":"First Name","middle_name":"Middle Name","last_name":"Last Name","date_of_birth":"04/21/2020"},{"id":108185,"first_name":"jtest","middle_name":"jay","last_name":"testj","date_of_birth":"27/08/2016"},{"id":108184,"first_name":"Hono","middle_name":"Chris","last_name":"Mbe 4","date_of_birth":"16/05/1989"},{"id":108183,"first_name":"Johnny","middle_name":"G","last_name":"Grøttå","date_of_birth":"28.03.1968"},{"id":108182,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108181,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108180,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108179,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108178,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108177,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108176,"first_name":"jtest","middle_name":"jay","last_name":"testj","date_of_birth":"27/08/2016"},{"id":108175,"first_name":"Hono","middle_name":"Chris","last_name":"Mbe 4","date_of_birth":"16/05/1989"},{"id":108174,"first_name":"First Name","middle_name":"Middle Name","last_name":"Last Name","date_of_birth":"04/21/2020"},{"id":108173,"first_name":"First Name","middle_name":"Middle Name","last_name":"Last Name","date_of_birth":"04/21/2020"},{"id":108172,"first_name":"First Name","middle_name":"Middle Name","last_name":"Last Name","date_of_birth":"04/21/2020"},{"id":108171,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108170,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108169,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108168,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108167,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108166,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108165,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108164,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108163,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108162,"first_name":"jtest","middle_name":"jay","last_name":"testj","date_of_birth":"27/08/2016"},{"id":108161,"first_name":"Hono","middle_name":"Chris","last_name":"Mbe 4","date_of_birth":"16/05/1989"},{"id":108160,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108159,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108158,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108157,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108156,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108155,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108154,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108149,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108148,"first_name":"Testing","middle_name":"A","last_name":"Tester","date_of_birth":"12/12/2005"},{"id":108147,"first_name":"jtest","middle_name":"jay","last_name":"testj","date_of_birth":"27/08/2016"},{"id":108146,"first_name":"Hono","middle_name":"Chris","last_name":"Mbe 4","date_of_birth":"16/05/1989"},{"id":108145,"first_name":"jtest","middle_name":"jay","last_name":"testj","date_of_birth":"27/08/2016"},{"id":108144,"first_name":"Hono","middle_name":"Chris","last_name":"Mbe 4","date_of_birth":"16/05/1989"},{"id":108143,"first_name":"first_name","middle_name":"middle_name","last_name":"last_name","date_of_birth":"date_of_birth"},{"id":108142,"first_name":"first_name","middle_name":"middle_name","last_name":"last_name","date_of_birth":"date_of_birth"},{"id":108141,"first_name":"jtest","middle_name":"jay","last_name":"testj","date_of_birth":"27/08/2016"},{"id":108140,"first_name":"Hono","middle_name":"Chris","last_name":"Mbe 4","date_of_birth":"16/05/1989"},{"id":108139,"first_name":"Temah","middle_name"... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210316 14:14:02.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210316 14:14:02.525" endtime="20210316 14:14:02.864"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210316 14:14:02.865" endtime="20210316 14:14:02.866"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20210316 14:14:02.866" endtime="20210316 14:14:02.873"></status>
</kw>
<status status="PASS" starttime="20210316 14:14:02.522" endtime="20210316 14:14:02.873" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t2" name="TC_002_Get_by_Id">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>fetchdata</arg>
<arg>${Base_URL}</arg>
</arguments>
<msg timestamp="20210316 14:14:02.875" level="INFO">Creating Session using : alias=fetchdata, url=http://thetestingworldapi.com/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210316 14:14:02.875" endtime="20210316 14:14:02.876"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>fetchdata</arg>
<arg>api/studentsDetails/${id}</arg>
</arguments>
<assign>
<var>${response1}</var>
</assign>
<msg timestamp="20210316 14:14:03.076" level="INFO">GET Request : url=http://thetestingworldapi.com//api/studentsDetails/108193 
 path_url=//api/studentsDetails/108193 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210316 14:14:03.076" level="INFO">GET Response : url=http://thetestingworldapi.com//api/studentsDetails/108193 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Server': 'Microsoft-IIS/8.5', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 16 Mar 2021 14:14:02 GMT', 'Content-Length': '165'} 
 body={"status":"true","data":{"id":108193,"first_name":"sample string 2","middle_name":"sample string 3","last_name":"sample string 4","date_of_birth":"sample string 5"}} 
 </msg>
<msg timestamp="20210316 14:14:03.076" level="INFO">${response1} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210316 14:14:02.876" endtime="20210316 14:14:03.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response1.status_code}</arg>
</arguments>
<status status="PASS" starttime="20210316 14:14:03.077" endtime="20210316 14:14:03.077"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response1.status_code}</arg>
</arguments>
<assign>
<var>${actualcode}</var>
</assign>
<msg timestamp="20210316 14:14:03.078" level="INFO">${actualcode} = 200</msg>
<status status="PASS" starttime="20210316 14:14:03.077" endtime="20210316 14:14:03.078"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${actualcode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20210316 14:14:03.078" endtime="20210316 14:14:03.079"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response1.content}</arg>
</arguments>
<assign>
<var>${jsonResponse}</var>
</assign>
<msg timestamp="20210316 14:14:03.079" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210316 14:14:03.080" level="INFO">To JSON using : content={"status":"true","data":{"id":108193,"first_name":"sample string 2","middle_name":"sample string 3","last_name":"sample string 4","date_of_birth":"sample string 5"}} </msg>
<msg timestamp="20210316 14:14:03.080" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210316 14:14:03.080" level="INFO">${jsonResponse} = {'status': 'true', 'data': {'id': 108193, 'first_name': 'sample string 2', 'middle_name': 'sample string 3', 'last_name': 'sample string 4', 'date_of_birth': 'sample string 5'}}</msg>
<status status="PASS" starttime="20210316 14:14:03.079" endtime="20210316 14:14:03.080"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${jsonResponse}</arg>
</arguments>
<status status="PASS" starttime="20210316 14:14:03.080" endtime="20210316 14:14:03.081"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${jsonResponse}</arg>
<arg>data.first_name</arg>
</arguments>
<assign>
<var>@{firstNameList}</var>
</assign>
<msg timestamp="20210316 14:14:03.143" level="INFO">@{firstNameList} = [ sample string 2 ]</msg>
<status status="PASS" starttime="20210316 14:14:03.081" endtime="20210316 14:14:03.144"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${firstNameList}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${firstName}</var>
</assign>
<msg timestamp="20210316 14:14:03.145" level="INFO">${firstName} = sample string 2</msg>
<status status="PASS" starttime="20210316 14:14:03.144" endtime="20210316 14:14:03.145"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${firstName}</arg>
</arguments>
<status status="PASS" starttime="20210316 14:14:03.145" endtime="20210316 14:14:03.146"></status>
</kw>
<status status="PASS" starttime="20210316 14:14:02.874" endtime="20210316 14:14:03.146" critical="yes"></status>
</test>
<status status="PASS" starttime="20210316 14:14:00.123" endtime="20210316 14:14:03.148"></status>
</suite>
<status status="PASS" starttime="20210316 14:14:00.039" endtime="20210316 14:14:03.176"></status>
</suite>
<status status="PASS" starttime="20210316 14:13:59.963" endtime="20210316 14:14:03.214"></status>
</suite>
<status status="PASS" starttime="20210316 14:13:59.845" endtime="20210316 14:14:03.244"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="RobotFramework">RobotFramework</stat>
<stat pass="2" fail="0" id="s1-s1" name="RobotAutomation">RobotFramework.RobotAutomation</stat>
<stat pass="2" fail="0" id="s1-s1-s1" name="TestCases">RobotFramework.RobotAutomation.TestCases</stat>
<stat pass="2" fail="0" id="s1-s1-s1-s1" name="APITesting">RobotFramework.RobotAutomation.TestCases.APITesting</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210316 14:14:03.079" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
</errors>
</robot>
